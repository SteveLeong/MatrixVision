{"version":3,"sources":["components/symbol.js","components/stream.js","App.js","serviceWorker.js","index.js"],"names":["Symbol","x","y","speed","first","Object","classCallCheck","this","x1","y1","speed1","first1","average","symbolData","rand","Math","floor","random","value","imgData","count","total","k","data","length","height","Stream","fontSize","symbols","totalSymbols","round","i","symbol","setRandomSymbol","push","ctx","forEach","fillStyle","fillText","animate","App","props","_this","possibleConstructorReturn","getPrototypeOf","call","state","video","hover","setUp","setUpVideo","getSymbols","canvas","width","sfontSize","stream","generateSymbols","streams","navigator","mediaDevices","getUserMedia","audio","then","localMediaStream","console","log","srcObject","play","setState","catch","err","error","font","xcoor","ycoor","String","fromCharCode","getImageData","j","arr","Array","sort","a","b","interval","index","paintToCanvas","drawImage","matrixify","requestAnimationFrame","size","brightness","getBrightness","ceil","setToVideoSymbol","clearRect","render","takePhoto","data1","toDataURL","link","document","createElement","href","setAttribute","innerHTML","concat","strip","insertBefore","firstChild","querySelector","scrollIntoView","behavior","handleVisibleChange","show","refs","getContext","fillRect","hoverContent","react_default","className","target","rel","icon","type","row","style","col","span","ref","gutter","popover","content","trigger","placement","visible","onVisibleChange","es_button","onClick","disabled","Component","Boolean","window","location","hostname","match","ReactDOM","src_App","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c9937973.chunk.js","sourcesContent":["class Symbol {\n  constructor(x, y, speed, first) {\n    this.x1 = x;\n    this.y1 = y;\n    this.speed1 = speed;\n    this.first1 = first;\n    this.average = 0;\n  }\n\n  setRandomSymbol(symbolData) {\n    var rand = Math.floor(Math.random() * 95);\n    this.value = symbolData[rand][1];\n  }\n\n  setToVideoSymbol(symbolData) {\n    this.value = symbolData[this.average];\n  }\n\n  getBrightness(imgData) {\n    var count = 1;\n    var total = 0;\n    for (var k = 0; k < imgData.data.length; k += 4) {\n      total +=\n        0.2126 * imgData.data[k] +\n        0.7152 * imgData.data[k + 1] +\n        0.0722 * imgData.data[k + 2];\n      count++;\n    }\n    return [total, count];\n  }\n\n  animate(height) {\n    this.y1 = this.y1 >= height ? 0 : (this.y1 += this.speed1);\n  }\n}\n\nexport default Symbol;\n","import Symbol from \"./symbol\";\n\nclass Stream {\n  constructor(height, fontSize) {\n    this.symbols = [];\n    this.totalSymbols = height / fontSize;\n    this.speed = Math.random() * 6 + 2;\n    this.first = Math.round(Math.random() * 3) === 1;\n  }\n\n  generateSymbols(x, y, fontSize, symbolData) {\n    for (var i = 0; i <= this.totalSymbols; i++) {\n      var symbol = new Symbol(x, y, this.speed, this.first, symbolData);\n\n      symbol.setRandomSymbol(symbolData);\n      this.symbols.push(symbol);\n\n      y -= fontSize;\n      this.first = false;\n    }\n  }\n\n  render(ctx, height) {\n    this.symbols.forEach(function(symbol) {\n      if (symbol.first) {\n        ctx.fillStyle = \"#09ff08\";\n      } else {\n        ctx.fillStyle = \"#00a800\";\n      }\n      ctx.fillText(symbol.value, symbol.x1, symbol.y1);\n      symbol.animate(height);\n    });\n  }\n}\n\nexport default Stream;\n","import React, { Component } from \"react\";\nimport { Row, Col, Button, Popover, Icon } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport \"./css/main.css\";\n\nimport Stream from \"./components/stream\";\n// import Column from \"antd/lib/table/Column\";\n\nclass App extends Component {\n  state = {\n    video: false,\n    hover: false\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.sfontSize = 11;\n    this.symbols = new Array(25);\n    this.symbolData = []; // All 96 Katakana symbols and theyre respective RGB totals\n    this.streams = [];\n  }\n\n  componentDidMount() {\n    this.video = this.refs.video;\n    this.canvas = this.refs.canvas;\n    this.strip = this.refs.strip;\n    this.ctx = this.canvas.getContext(\"2d\");\n    this.ctx.fillStyle = \"black\";\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    this.setUp();\n    this.ctx.fillStyle = \"black\";\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    this.ctx.font = \"11px monospace\";\n    this.ctx.fillStyle = \"#00BB00\";\n  }\n\n  setUp = () => {\n    this.setUpVideo(this.video);\n    this.getSymbols();\n    var x = 0;\n    for (var i = 0; i <= this.canvas.width / this.sfontSize; i++) {\n      var stream = new Stream(this.canvas.height, this.sfontSize);\n      stream.generateSymbols(\n        x,\n        Math.random() - 500,\n        this.sfontSize,\n        this.symbolData\n      );\n      this.streams.push(stream);\n      x += this.sfontSize;\n    }\n  };\n\n  setUpVideo = video => {\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      navigator.mediaDevices\n        .getUserMedia({ video: true, audio: false })\n        .then(localMediaStream => {\n          console.log(localMediaStream);\n          video.srcObject = localMediaStream;\n          video.play();\n          this.setState({ video: true });\n          console.log(this.state.video);\n        })\n        .catch(err => {\n          console.error(\"Please enable your webcam\", err);\n          console.log(this.state.video);\n        });\n    }\n  };\n\n  getSymbols = () => {\n    this.ctx.font = \"11px monospace\";\n    this.ctx.fillStyle = \"#00BB00\";\n    // Get Katakana symbols\n    var xcoor = 0;\n    var count = 0;\n    var ycoor = 10;\n    var symbol;\n\n    for (var i = 0; i < 96; i++) {\n      // get symbol, 0x30A0 is where Katakana starts\n      symbol = String.fromCharCode(0x30a0 + i);\n\n      // if its trying to print off the canvas\n      if (count * 12 + 20 > this.canvas.width) {\n        count = 0;\n        ycoor += 10;\n      }\n\n      xcoor = count * 12 + 20;\n\n      this.ctx.fillText(symbol, xcoor, ycoor);\n\n      // get the 'brightness' of the symbol, Black=000, so brightness is the amount of RGB in the symbol\n      // getImageData(x, y, width, height)\n\n      var imgData = this.ctx.getImageData(\n        xcoor,\n        ycoor - 10,\n        7,\n        this.sfontSize - 1\n      );\n\n      // total is the total RGB value of the symbol\n      var total = 0; //reset\n      for (var j = 0; j < imgData.data.length; j += 4) {\n        total += imgData.data[j] + imgData.data[j + 1] + imgData.data[j + 2];\n      }\n\n      var arr = new Array(2);\n      arr[0] = total;\n      arr[1] = symbol;\n      this.symbolData.push(arr);\n      count++;\n    }\n\n    // Sort symbols by total values\n    this.symbolData.sort(function(a, b) {\n      return a[0] - b[0];\n    });\n\n    // Take 25 symbols\n    var interval = Math.floor(this.symbolData.length / this.symbols.length);\n    var index = 0;\n    for (\n      var k = 0;\n      k < this.symbols.length - 1 && index < this.symbolData.length;\n      k++\n    ) {\n      this.symbols[k] = this.symbolData[index][1];\n      // draw them onto empty canvas\n      this.ctx.fillText(this.symbols[k], k * 10 + 20, 90);\n      index += interval;\n    }\n\n    // Last symbol is always has biggest total RGB\n    this.symbols[this.symbols.length - 1] = this.symbolData[\n      this.symbolData.length - 1\n    ][1];\n\n    // this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  };\n\n  paintToCanvas = () => {\n    this.ctx.drawImage(this.video, 0, 0);\n    this.matrixify();\n    requestAnimationFrame(this.paintToCanvas);\n  };\n\n  matrixify = () => {\n    var height = this.canvas.height;\n    var ctx = this.ctx;\n    var symbols = this.symbols;\n    var size = this.sfontSize;\n    this.streams.forEach(function(stream) {\n      stream.symbols.forEach(function(symbol) {\n        var imgData = ctx.getImageData(symbol.x1, symbol.y1, 7, size);\n        var brightness = symbol.getBrightness(imgData);\n        var total = brightness[0] / brightness[1];\n\n        symbol.average = Math.ceil(total / stream.symbols.length);\n        symbol.setToVideoSymbol(symbols);\n      });\n    });\n\n    ctx.clearRect(0, 0, this.canvas.width, height);\n\n    this.streams.forEach(function(stream) {\n      stream.render(ctx, height);\n    });\n  };\n\n  takePhoto = () => {\n    const data1 = this.canvas.toDataURL(\"image/jpeg\");\n    console.log(data1);\n    var link = document.createElement(\"a\");\n    link.href = data1;\n    link.setAttribute(\"download\", \"matrix\");\n    link.innerHTML = `<img src=\"${data1}\"/>`;\n    this.strip.insertBefore(link, this.strip.firstChild);\n    document.querySelector(\".strip\").scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n\n  handleVisibleChange = show => {\n    console.log(\"handleHoverChange\");\n    this.setState({\n      hover: show\n    });\n  };\n\n  render() {\n    const hoverContent = <div>Please Enable Your Webcam!</div>;\n\n    return (\n      <div>\n        <header className=\"main\">\n          <a href=\"App.js\">MatrixVision</a>\n          <nav className=\"navbar\">\n            <ul>\n              <li>\n                <a\n                  href=\"https://github.com/SteveLeong\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <Icon type=\"github\" className=\"navicons\" />\n                </a>\n              </li>\n              <li>\n                <a\n                  href=\"https://www.linkedin.com/in/steven-leong/\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <Icon type=\"linkedin\" className=\"navicons\" />\n                </a>\n              </li>\n              <li>\n                <a\n                  href=\"https://steveleong.github.io/Portfolio/\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <Icon type=\"folder-open\" className=\"navicons\" />\n                </a>\n              </li>\n            </ul>\n          </nav>\n        </header>\n        <div className=\"content\">\n          <Row style={{ height: \"100%\" }}>\n            <Col span={16}>\n              <canvas\n                ref=\"canvas\"\n                width=\"640\"\n                height=\"480\"\n                className=\"canvas\"\n              />\n            </Col>\n            <Col span={8} style={{ height: \"80vh\" }}>\n              <video ref=\"video\" className=\"video\" />\n              <div className=\"controller\">\n                <Row className=\"row\">\n                  <Col span={24} gutter={16} className=\"col\">\n                    <div>\n                      <Popover\n                        content={hoverContent}\n                        trigger=\"hover\"\n                        placement=\"bottom\"\n                        visible={this.state.hover}\n                        onVisibleChange={\n                          this.state.video ? \"\" : this.handleVisibleChange\n                        }\n                      >\n                        <Button\n                          onClick={this.paintToCanvas}\n                          disabled={!this.state.video}\n                        >\n                          Matrixify\n                        </Button>\n                      </Popover>\n                    </div>\n                  </Col>\n                  <Col>\n                    <Button onClick={this.takePhoto}>Take Photo</Button>\n                  </Col>\n                </Row>\n              </div>\n            </Col>\n          </Row>\n          <div ref=\"strip\" className=\"strip\" />\n          <div className=\"footer\">\n            <div className=\"description\">\n              For my Final Net Art Project I decided to do an Interactive\n              Artwork inspired by the movie 'Matrix'. In the movie, there is a\n              scene where the main character sees 'code' in his vision,\n              overlayed on top of reality. I thought it would be cool to\n              recreate this effect using a webcam.\n              <br /> Originally this was done entirely in JavaScript, but I\n              decided to convert it to a React application.\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n    {\n      /* \n    }\n\n    {\n      /* <div>Make Sure Your Webcam is Enabled!</div> */\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}